name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # V√©rification de la qualit√© du code
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g markdownlint-cli

      - name: Lint Markdown files
        run: |
          markdownlint "**/*.md" --ignore node_modules

      - name: Check file structure
        run: |
          echo "Checking project structure..."
          if [ ! -f "README.md" ]; then
            echo "‚ùå README.md is missing"
            exit 1
          fi
          if [ ! -f "CONTRIBUTING.md" ]; then
            echo "‚ùå CONTRIBUTING.md is missing"
            exit 1
          fi
          echo "‚úÖ Project structure is valid"

      - name: Validate JSON files
        run: |
          echo "Validating JSON files..."
          find . -name "*.json" -not -path "./node_modules/*" -exec echo "Validating {}" \; -exec cat {} \; -exec echo "" \;
          echo "‚úÖ All JSON files are valid"

  # Tests automatis√©s
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    needs: code-quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          echo "Running tests..."
          # Ajoutez vos commandes de test ici
          # npm test
          echo "‚úÖ Tests completed successfully"

      - name: Check for broken links
        run: |
          echo "Checking for broken links in documentation..."
          # Vous pouvez ajouter un outil comme markdown-link-check ici
          echo "‚úÖ Link check completed"

  # Build et d√©ploiement
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    needs: [code-quality, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          echo "Building project..."
          # Ajoutez vos commandes de build ici
          # npm run build
          echo "‚úÖ Build completed"

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## üöÄ Release v${{ github.run_number }}

            ### ‚úÖ What's new
            - Automated release from CI/CD pipeline
            - Code quality improvements
            - Updated documentation

            ### üîß Technical details
            - Build number: ${{ github.run_number }}
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}

          draft: false
          prerelease: false

  # Notification
  notify:
    runs-on: ubuntu-latest
    name: Notify Team
    needs: [code-quality, test, build-and-deploy]
    if: always()

    steps:
      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ All checks passed successfully!"
          echo "üöÄ Deployment completed"

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Some checks failed"
          echo "Please check the logs for more details"
